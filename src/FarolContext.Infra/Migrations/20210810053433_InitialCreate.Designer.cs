// <auto-generated />
using System;
using FarolContext.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FarolContext.Infra.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210810053433_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FarolContext.Domain.Entities.Cell", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChurchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("ChurchId");

                    b.ToTable("Cell");
                });

            modelBuilder.Entity("FarolContext.Domain.Entities.Church", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120)");

                    b.HasKey("Id");

                    b.ToTable("Church");
                });

            modelBuilder.Entity("FarolContext.Domain.Entities.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Age")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("CellId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChurchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MinistryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CellId");

                    b.HasIndex("ChurchId");

                    b.HasIndex("MinistryId");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("FarolContext.Domain.Entities.Ministry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChurchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("ChurchId");

                    b.ToTable("Ministry");
                });

            modelBuilder.Entity("FarolContext.Domain.Entities.Visitor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Age")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ChurchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MemberInvitedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ChurchId");

                    b.ToTable("Visitor");
                });

            modelBuilder.Entity("FarolContext.Domain.Entities.Cell", b =>
                {
                    b.HasOne("FarolContext.Domain.Entities.Church", "Church")
                        .WithMany("Cells")
                        .HasForeignKey("ChurchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Church");
                });

            modelBuilder.Entity("FarolContext.Domain.Entities.Church", b =>
                {
                    b.OwnsOne("FarolContext.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("ChurchId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .HasColumnType("varchar(150)")
                                .HasColumnName("City");

                            b1.Property<string>("Country")
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Country");

                            b1.Property<string>("Neighborhood")
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Neighborhood");

                            b1.Property<string>("Number")
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Number");

                            b1.Property<string>("State")
                                .HasColumnType("varchar(150)")
                                .HasColumnName("State");

                            b1.Property<string>("Street")
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Street");

                            b1.Property<string>("ZipCode")
                                .HasColumnType("varchar(150)")
                                .HasColumnName("ZipCode");

                            b1.HasKey("ChurchId");

                            b1.ToTable("Church");

                            b1.WithOwner()
                                .HasForeignKey("ChurchId");
                        });

                    b.OwnsOne("FarolContext.Domain.ValueObjects.Contact", "Contact", b1 =>
                        {
                            b1.Property<Guid>("ChurchId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Cellphone")
                                .HasColumnType("varchar(12)")
                                .HasColumnName("Cellphone");

                            b1.Property<string>("Telephone")
                                .HasColumnType("varchar(12)")
                                .HasColumnName("Telephone");

                            b1.HasKey("ChurchId");

                            b1.ToTable("Church");

                            b1.WithOwner()
                                .HasForeignKey("ChurchId");
                        });

                    b.OwnsOne("FarolContext.Domain.ValueObjects.Document", "Document", b1 =>
                        {
                            b1.Property<Guid>("ChurchId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnType("varchar(14)")
                                .HasColumnName("Cnpj");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("DocumentType");

                            b1.HasKey("ChurchId");

                            b1.ToTable("Church");

                            b1.WithOwner()
                                .HasForeignKey("ChurchId");
                        });

                    b.OwnsOne("FarolContext.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("ChurchId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Email");

                            b1.HasKey("ChurchId");

                            b1.ToTable("Church");

                            b1.WithOwner()
                                .HasForeignKey("ChurchId");
                        });

                    b.Navigation("Address");

                    b.Navigation("Contact");

                    b.Navigation("Document")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();
                });

            modelBuilder.Entity("FarolContext.Domain.Entities.Member", b =>
                {
                    b.HasOne("FarolContext.Domain.Entities.Cell", "Cell")
                        .WithMany("Members")
                        .HasForeignKey("CellId");

                    b.HasOne("FarolContext.Domain.Entities.Church", "Church")
                        .WithMany("Members")
                        .HasForeignKey("ChurchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FarolContext.Domain.Entities.Visitor", null)
                        .WithOne("MemberInvited")
                        .HasForeignKey("FarolContext.Domain.Entities.Member", "Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FarolContext.Domain.Entities.Ministry", "Ministry")
                        .WithMany("Members")
                        .HasForeignKey("MinistryId");

                    b.OwnsOne("FarolContext.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("MemberId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .HasColumnType("varchar(150)")
                                .HasColumnName("City");

                            b1.Property<string>("Country")
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Country");

                            b1.Property<string>("Neighborhood")
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Neighborhood");

                            b1.Property<string>("Number")
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Number");

                            b1.Property<string>("State")
                                .HasColumnType("varchar(150)")
                                .HasColumnName("State");

                            b1.Property<string>("Street")
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Street");

                            b1.Property<string>("ZipCode")
                                .HasColumnType("varchar(150)")
                                .HasColumnName("ZipCode");

                            b1.HasKey("MemberId");

                            b1.ToTable("Member");

                            b1.WithOwner()
                                .HasForeignKey("MemberId");
                        });

                    b.OwnsOne("FarolContext.Domain.ValueObjects.Contact", "Contact", b1 =>
                        {
                            b1.Property<Guid>("MemberId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Cellphone")
                                .HasColumnType("varchar(12)")
                                .HasColumnName("Cellphone");

                            b1.Property<string>("Telephone")
                                .HasColumnType("varchar(12)")
                                .HasColumnName("Telephone");

                            b1.HasKey("MemberId");

                            b1.ToTable("Member");

                            b1.WithOwner()
                                .HasForeignKey("MemberId");
                        });

                    b.OwnsOne("FarolContext.Domain.ValueObjects.Document", "Document", b1 =>
                        {
                            b1.Property<Guid>("MemberId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnType("varchar(11)")
                                .HasColumnName("Cpf");

                            b1.Property<int>("Type")
                                .HasColumnType("int")
                                .HasColumnName("DocumentType");

                            b1.HasKey("MemberId");

                            b1.ToTable("Member");

                            b1.WithOwner()
                                .HasForeignKey("MemberId");
                        });

                    b.OwnsOne("FarolContext.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("MemberId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Email");

                            b1.HasKey("MemberId");

                            b1.ToTable("Member");

                            b1.WithOwner()
                                .HasForeignKey("MemberId");
                        });

                    b.OwnsOne("FarolContext.Domain.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("MemberId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("LastName");

                            b1.HasKey("MemberId");

                            b1.ToTable("Member");

                            b1.WithOwner()
                                .HasForeignKey("MemberId");
                        });

                    b.Navigation("Address");

                    b.Navigation("Cell");

                    b.Navigation("Church");

                    b.Navigation("Contact");

                    b.Navigation("Document")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Ministry");

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("FarolContext.Domain.Entities.Ministry", b =>
                {
                    b.HasOne("FarolContext.Domain.Entities.Church", "Church")
                        .WithMany("Ministries")
                        .HasForeignKey("ChurchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Church");
                });

            modelBuilder.Entity("FarolContext.Domain.Entities.Visitor", b =>
                {
                    b.HasOne("FarolContext.Domain.Entities.Church", "Church")
                        .WithMany()
                        .HasForeignKey("ChurchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("FarolContext.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("VisitorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .HasColumnType("varchar(150)")
                                .HasColumnName("City");

                            b1.Property<string>("Country")
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Country");

                            b1.Property<string>("Neighborhood")
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Neighborhood");

                            b1.Property<string>("Number")
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Number");

                            b1.Property<string>("State")
                                .HasColumnType("varchar(150)")
                                .HasColumnName("State");

                            b1.Property<string>("Street")
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Street");

                            b1.Property<string>("ZipCode")
                                .HasColumnType("varchar(150)")
                                .HasColumnName("ZipCode");

                            b1.HasKey("VisitorId");

                            b1.ToTable("Visitor");

                            b1.WithOwner()
                                .HasForeignKey("VisitorId");
                        });

                    b.OwnsOne("FarolContext.Domain.ValueObjects.Contact", "Contact", b1 =>
                        {
                            b1.Property<Guid>("VisitorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Cellphone")
                                .HasColumnType("varchar(12)")
                                .HasColumnName("Cellphone");

                            b1.Property<string>("Telephone")
                                .HasColumnType("varchar(12)")
                                .HasColumnName("Telephone");

                            b1.HasKey("VisitorId");

                            b1.ToTable("Visitor");

                            b1.WithOwner()
                                .HasForeignKey("VisitorId");
                        });

                    b.OwnsOne("FarolContext.Domain.ValueObjects.Document", "Document", b1 =>
                        {
                            b1.Property<Guid>("VisitorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnType("varchar(11)")
                                .HasColumnName("Cpf");

                            b1.Property<int>("Type")
                                .HasColumnType("int")
                                .HasColumnName("DocumentType");

                            b1.HasKey("VisitorId");

                            b1.ToTable("Visitor");

                            b1.WithOwner()
                                .HasForeignKey("VisitorId");
                        });

                    b.OwnsOne("FarolContext.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("VisitorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Email");

                            b1.HasKey("VisitorId");

                            b1.ToTable("Visitor");

                            b1.WithOwner()
                                .HasForeignKey("VisitorId");
                        });

                    b.OwnsOne("FarolContext.Domain.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("VisitorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("LastName");

                            b1.HasKey("VisitorId");

                            b1.ToTable("Visitor");

                            b1.WithOwner()
                                .HasForeignKey("VisitorId");
                        });

                    b.Navigation("Address");

                    b.Navigation("Church");

                    b.Navigation("Contact");

                    b.Navigation("Document");

                    b.Navigation("Email");

                    b.Navigation("Name");
                });

            modelBuilder.Entity("FarolContext.Domain.Entities.Cell", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("FarolContext.Domain.Entities.Church", b =>
                {
                    b.Navigation("Cells");

                    b.Navigation("Members");

                    b.Navigation("Ministries");
                });

            modelBuilder.Entity("FarolContext.Domain.Entities.Ministry", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("FarolContext.Domain.Entities.Visitor", b =>
                {
                    b.Navigation("MemberInvited");
                });
#pragma warning restore 612, 618
        }
    }
}
